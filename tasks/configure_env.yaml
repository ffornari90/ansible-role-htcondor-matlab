- name: Get hostname
  shell: hostname
  register: hostname

- name: Get username
  shell: "getent passwd 1001 | cut -d: -f1"
  register: username

- name: Check if master_host is in hostname
  set_fact:
    is_master_host: "{{ master_host in hostname.stdout }}"

- name: Check if master_host is not in hostname
  set_fact:
    is_not_master_host: "{{ not is_master_host }}"

- name: Store registered username value in a variable
  set_fact:
    user_name: "{{ username.stdout }}"

- name: Get master private ip
  get_url:
    url: http://169.254.169.254/latest/meta-data/local-ipv4
    dest: /tmp/master_private_ip
  register: master_private_ip
  when: is_master_host

- name: Get master public ip
  get_url:
    url: http://169.254.169.254/latest/meta-data/public-ipv4
    dest: /tmp/master_public_ip
  when: is_master_host

- name: Read master public ip content
  slurp:
    src: /tmp/master_public_ip
  register: file_content
  when: is_master_host

- name: Store master public ip file content in a variable
  set_fact:
    master_public_ip: "{{ file_content.content | b64decode }}"
  when: is_master_host

#- name: Remove lines containing "vnode-0" from the hosts file
#  become: yes
#  replace:
#    path: /etc/hosts
#    regexp: '^.*vnode-0.*$'
#    replace: ''

#- name: Add a line to /etc/hosts
#  become: yes
#  lineinfile:
#    path: /etc/hosts
#    line: "master_private_ip.stdout vnode-0.localdomain vnode-0"

- name: Extract network CIDR from master_public_ip
  set_fact:
    network_cidr: "{{ master_public_ip.split('.')[:3] | join('.') ~ '.0/24' }}"
  when: is_master_host
